---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: pr-pipeline
spec:
  params:
    - name: target-repository
      description: the git repo containing source code
    - name: target-branch
      description: branch
    - name: target-commit-id
      description: commit id in the target 
    - name: pr-branch
      description: branch
    - name: pr-commit-id
      description: the git revision/commit for the git repo
      default: ""
    - name: pr-repository
      description: pr repo
    - name: pr-commit-timestamp
    - name: pr-url
      description: pr URL
    - name: scm-type
    - name: project-id
      default: ""
    - name: pipeline-debug
      description: toggles debug mode for the pipeline
    - name: serving-ns
      description: modelmesh serving namespace
    - name: kubernetes-cluster
      description: cluster name
    - name: docker-password
      description: iam api key
    - name: ibmapikey
      description: the ibmcloud api key
    - name: resource-group
      description: resource group
      default: default
    - name: org
      description: organization
    - name: region
      description: region
    - name: space
      description: space      
  workspaces:
    - name: pipeline-ws

  tasks:
    - name: git-clone
      taskRef:
        name: git-clone-repo
      params:
        - name: continuous-delivery-context-secret
          value: "secure-properties"
        - name: ibmcloud-apikey-secret-key
          value: "apikey"
        - name: repository
          value: $(params.target-repository)
        - name: branch
          value: $(params.target-branch)
        - name: revision
          value: $(params.target-commit-id)
        - name: pr-repository
          value: $(params.pr-repository)
        - name: pr-branch
          value: $(params.pr-branch)
        - name: pr-revision
          value: $(params.pr-commit-id)
        - name: pipeline-debug
          value: $(params.pipeline-debug)
      workspaces:
        - name: output
          workspace: pipeline-ws
    - name: unit-tests-status-pending
      taskRef:
        name: git-set-commit-status
      workspaces:
        - name: artifacts
          workspace: pipeline-ws
      params:
        - name: repository
          value: $(params.target-repository)
        - name: revision
          value: $(params.pr-commit-id)
        - name: context
          value: "Unit tests"
        - name: description
          value: "Unit tests successfull"
        - name: state
          value: "pending"
        - name: pipeline-debug
          value: $(params.pipeline-debug)
    - name: setup-env
      runAfter: [git-clone]
      taskRef:
        name: test
      params:
        - name: repository
          value: $(params.target-repository)
        - name: revision
          value: $(params.pr-commit-id)
        - name: apikey
          value: $(params.ibmapikey)
        - name: registry-namespace
          value: chhuang
        - name: docker-username
          value: iamapikey
        - name: docker-password
          value: $(params.docker-password)
        - name: resource-group
          value: $(params.resource-group)
        - name: org
          value: $(params.org)
        - name: region
          value: $(params.region)
        - name: space
          value: $(params.space)
        - name: skip-clone
          value: "1"
      workspaces:
      - name: task-pvc
        workspace: pipeline-ws
    - name: unit-tests
      runAfter: [setup-env]
      taskRef:
        name: deploy
      params:
        - name: apikey
          value: $(params.ibmapikey)
        - name: docker-username
          value: iamapikey
        - name: docker-password
          value: $(params.docker-password)
        - name: kubernetes-cluster
          value: $(params.kubernetes-cluster)
        - name: serving-ns
          value: $(params.serving-ns)
        #- name: tests-script
        #  value: |
        #    if [ -f ./test/run-tests.sh ]; then
        #      source ./test/run-tests.sh
        #    else
        #      echo "Test runner script not found: ./test/run-tests.sh"
        #      exit 1
        #    fi
      workspaces:
        #- name: artifacts
        #  workspace: pipeline-ws
        - name: task-pvc
          workspace: pipeline-ws
  finally:
    - name: unit-tests-status-finished
      taskRef:
        name: git-set-commit-status
      workspaces:
        - name: artifacts
          workspace: pipeline-ws
      params:
        - name: repository
          value: $(params.target-repository)
        - name: revision
          value: $(params.pr-commit-id)
        - name: context
          value: "Unit tests"
        - name: description
          value: "Unit tests successfull"
        - name: state
          value: "$(tasks.unit-tests.status)"
        - name: pipeline-debug
          value: $(params.pipeline-debug)